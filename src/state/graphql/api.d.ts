/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'ABIParameter': { kind: 'OBJECT'; name: 'ABIParameter'; fields: { 'indexed': { name: 'indexed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Actor': { kind: 'INTERFACE'; name: 'Actor'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'auditReports': { name: 'auditReports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditReport'; ofType: null; }; }; } }; 'balance': { name: 'balance'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'firstSeenAt': { name: 'firstSeenAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'internalTransactionCount': { name: 'internalTransactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActorLabel'; ofType: null; }; }; } }; 'lastActiveAt': { name: 'lastActiveAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityScore': { name: 'securityScore'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ActorType'; ofType: null; }; } }; }; possibleTypes: 'ContractActor' | 'EoaActor'; };
    'ActorComposed': { kind: 'OBJECT'; name: 'ActorComposed'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'auditReports': { name: 'auditReports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditReport'; ofType: null; }; }; } }; 'balance': { name: 'balance'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'firstSeenAt': { name: 'firstSeenAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'internalTransactionCount': { name: 'internalTransactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActorLabel'; ofType: null; }; }; } }; 'lastActiveAt': { name: 'lastActiveAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityScore': { name: 'securityScore'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'specialization': { name: 'specialization'; type: { kind: 'OBJECT'; name: 'ActorSpecialization'; ofType: null; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ActorType'; ofType: null; }; } }; }; };
    'ActorLabel': { kind: 'OBJECT'; name: 'ActorLabel'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'source': { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'verified': { name: 'verified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ActorResult': { kind: 'UNION'; name: 'ActorResult'; fields: {}; possibleTypes: 'ContractActor' | 'EoaActor'; };
    'ActorResultComposed': { kind: 'UNION'; name: 'ActorResultComposed'; fields: {}; possibleTypes: 'ActorComposed'; };
    'ActorSpecialization': { kind: 'OBJECT'; name: 'ActorSpecialization'; fields: { 'bridge': { name: 'bridge'; type: { kind: 'OBJECT'; name: 'BridgeSpecialization'; ofType: null; } }; 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'ContractSpecialization'; ofType: null; } }; 'eoa': { name: 'eoa'; type: { kind: 'OBJECT'; name: 'EoaSpecialization'; ofType: null; } }; 'exchange': { name: 'exchange'; type: { kind: 'OBJECT'; name: 'ExchangeSpecialization'; ofType: null; } }; 'factory': { name: 'factory'; type: { kind: 'OBJECT'; name: 'FactorySpecialization'; ofType: null; } }; 'multisig': { name: 'multisig'; type: { kind: 'OBJECT'; name: 'MultisigSpecialization'; ofType: null; } }; 'oracle': { name: 'oracle'; type: { kind: 'OBJECT'; name: 'OracleSpecialization'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'OBJECT'; name: 'TokenSpecialization'; ofType: null; } }; }; };
    'ActorType': { name: 'ActorType'; enumValues: 'Eoa' | 'Contract'; };
    'Address': unknown;
    'App': { kind: 'OBJECT'; name: 'App'; fields: { 'colors': { name: 'colors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'links': { name: 'links'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ApprovalEvent': { kind: 'OBJECT'; name: 'ApprovalEvent'; fields: { 'amount': { name: 'amount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'approved': { name: 'approved'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'decodedData': { name: 'decodedData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decodedTopics': { name: 'decodedTopics'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'eventName': { name: 'eventName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'eventSignature': { name: 'eventSignature'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expirationTime': { name: 'expirationTime'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isUnlimited': { name: 'isUnlimited'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'logIndex': { name: 'logIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'owner': { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'previousAllowance': { name: 'previousAllowance'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'removed': { name: 'removed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventSeverity'; ofType: null; }; } }; 'spender': { name: 'spender'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'spenderType': { name: 'spenderType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'tokenId': { name: 'tokenId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenSymbol': { name: 'tokenSymbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'topics': { name: 'topics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; }; }; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AuditReport': { kind: 'OBJECT'; name: 'AuditReport'; fields: { 'auditor': { name: 'auditor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'reportUrl': { name: 'reportUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'score': { name: 'score'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Balance': { kind: 'INTERFACE'; name: 'Balance'; fields: { 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BalanceCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'changeAmount': { name: 'changeAmount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'changePercentage': { name: 'changePercentage'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'changePeriod': { name: 'changePeriod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastActivity': { name: 'lastActivity'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityFlags': { name: 'securityFlags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BalanceType'; ofType: null; }; }; }; } }; }; possibleTypes: 'Erc20Balance' | 'NativeBalance'; };
    'BalanceCategory': { name: 'BalanceCategory'; enumValues: 'Wallet' | 'Contract' | 'Defi' | 'Cex' | 'Gaming' | 'Dao' | 'Multisig' | 'Bridge'; };
    'BalanceResult': { kind: 'UNION'; name: 'BalanceResult'; fields: {}; possibleTypes: 'Erc20Balance' | 'NativeBalance'; };
    'BalanceType': { name: 'BalanceType'; enumValues: 'Available' | 'Locked' | 'Staked' | 'Delegated' | 'Vesting' | 'Escrow' | 'Collateral' | 'Pending'; };
    'BasisPoints': unknown;
    'BigInt': unknown;
    'Block': { kind: 'OBJECT'; name: 'Block'; fields: { 'baseFeePerGas': { name: 'baseFeePerGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'burntFees': { name: 'burntFees'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'chainTipDistance': { name: 'chainTipDistance'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'characteristics': { name: 'characteristics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BlockCharacteristics'; ofType: null; }; } }; 'confirmations': { name: 'confirmations'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'consensusType': { name: 'consensusType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConsensusType'; ofType: null; }; } }; 'difficulty': { name: 'difficulty'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'extraData': { name: 'extraData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gasLimit': { name: 'gasLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'gasUsedPercentage': { name: 'gasUsedPercentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'internalTransactionCount': { name: 'internalTransactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'isFinalized': { name: 'isFinalized'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'minedAt': { name: 'minedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'minerReward': { name: 'minerReward'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'parentHash': { name: 'parentHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'propagationTime': { name: 'propagationTime'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'receiptsRoot': { name: 'receiptsRoot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'receivedAt': { name: 'receivedAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BlockRole'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'stateRoot': { name: 'stateRoot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BlockStatus'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'totalDifficulty': { name: 'totalDifficulty'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'transactionsRoot': { name: 'transactionsRoot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; }; };
    'BlockCharacteristics': { kind: 'OBJECT'; name: 'BlockCharacteristics'; fields: { 'hasBeaconRoots': { name: 'hasBeaconRoots'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasBlobs': { name: 'hasBlobs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasReorg': { name: 'hasReorg'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasUncles': { name: 'hasUncles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasWithdrawals': { name: 'hasWithdrawals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isCancun': { name: 'isCancun'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isDencun': { name: 'isDencun'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isEmpty': { name: 'isEmpty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isFork': { name: 'isFork'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isGenesis': { name: 'isGenesis'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isMerge': { name: 'isMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isShanghai': { name: 'isShanghai'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'BlockRole': { name: 'BlockRole'; enumValues: 'Canonical' | 'Uncle' | 'Orphaned' | 'Pending'; };
    'BlockStatus': { name: 'BlockStatus'; enumValues: 'Pending' | 'Confirmed' | 'Finalized' | 'Reorged'; };
    'Boolean': unknown;
    'BridgeSpecialization': { kind: 'OBJECT'; name: 'BridgeSpecialization'; fields: { 'bridgeType': { name: 'bridgeType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bridgeVersion': { name: 'bridgeVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityModel': { name: 'securityModel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceChains': { name: 'sourceChains'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'targetChains': { name: 'targetChains'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; }; };
    'ConsensusType': { name: 'ConsensusType'; enumValues: 'Pow' | 'Pos' | 'Poa' | 'PoaClique' | 'PoaBor' | 'PoaIbft' | 'PoaAura' | 'Tendermint' | 'Layer2Sequencer' | 'Rollup'; };
    'Contract': { kind: 'OBJECT'; name: 'Contract'; fields: { 'abi': { name: 'abi'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractInterface'; ofType: null; }; }; } }; 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'bytecode': { name: 'bytecode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'categories': { name: 'categories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContractCategory'; ofType: null; }; }; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'compilerVersion': { name: 'compilerVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deploymentBlock': { name: 'deploymentBlock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'deploymentTimestamp': { name: 'deploymentTimestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'deploymentTransaction': { name: 'deploymentTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractInterface'; ofType: null; }; }; }; } }; 'functions': { name: 'functions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractInterface'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'optimizationEnabled': { name: 'optimizationEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'risk': { name: 'risk'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractRisk'; ofType: null; }; } }; 'sourceCode': { name: 'sourceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'standards': { name: 'standards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContractStandard'; ofType: null; }; }; }; } }; 'statistics': { name: 'statistics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractStatistics'; ofType: null; }; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContractVerification'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ContractActor': { kind: 'OBJECT'; name: 'ContractActor'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'auditReports': { name: 'auditReports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditReport'; ofType: null; }; }; } }; 'balance': { name: 'balance'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'bytecode': { name: 'bytecode'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'bytecodeSize': { name: 'bytecodeSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'contractTags': { name: 'contractTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContractTag'; ofType: null; }; }; } }; 'creationBlock': { name: 'creationBlock'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'creationTransaction': { name: 'creationTransaction'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'firstSeenAt': { name: 'firstSeenAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'hasSource': { name: 'hasSource'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'internalTransactionCount': { name: 'internalTransactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'isUpgradable': { name: 'isUpgradable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActorLabel'; ofType: null; }; }; } }; 'lastActiveAt': { name: 'lastActiveAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'protocolName': { name: 'protocolName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'protocolRole': { name: 'protocolRole'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'protocolVersion': { name: 'protocolVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'proxyType': { name: 'proxyType'; type: { kind: 'ENUM'; name: 'ProxyType'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityScore': { name: 'securityScore'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'standards': { name: 'standards'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContractStandard'; ofType: null; }; }; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ActorType'; ofType: null; }; } }; 'verificationDate': { name: 'verificationDate'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'verificationMethod': { name: 'verificationMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ContractCategory': { name: 'ContractCategory'; enumValues: 'Token' | 'Nft' | 'Defi' | 'Gaming' | 'Governance' | 'Infrastructure' | 'Bridge' | 'Oracle' | 'Identity' | 'Storage' | 'Proxy' | 'Factory' | 'Multisig' | 'Account' | 'Utility'; };
    'ContractInterface': { kind: 'OBJECT'; name: 'ContractInterface'; fields: { 'inputs': { name: 'inputs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ABIParameter'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'outputs': { name: 'outputs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ABIParameter'; ofType: null; }; }; } }; 'selector': { name: 'selector'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'signature': { name: 'signature'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'stateMutability': { name: 'stateMutability'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ContractRisk': { kind: 'OBJECT'; name: 'ContractRisk'; fields: { 'blacklistedFunctions': { name: 'blacklistedFunctions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'complianceIssues': { name: 'complianceIssues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'hasEmergencyPause': { name: 'hasEmergencyPause'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasExternalDependencies': { name: 'hasExternalDependencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasMultiSig': { name: 'hasMultiSig'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasRenounceOwnership': { name: 'hasRenounceOwnership'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasTimelock': { name: 'hasTimelock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasUpgradeability': { name: 'hasUpgradeability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'riskFactors': { name: 'riskFactors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'suspiciousPatterns': { name: 'suspiciousPatterns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ContractSpecialization': { kind: 'OBJECT'; name: 'ContractSpecialization'; fields: { 'bytecode': { name: 'bytecode'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'bytecodeSize': { name: 'bytecodeSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'contractTags': { name: 'contractTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContractTag'; ofType: null; }; }; } }; 'creationBlock': { name: 'creationBlock'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'creationTransaction': { name: 'creationTransaction'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'hasSource': { name: 'hasSource'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isUpgradable': { name: 'isUpgradable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'protocolName': { name: 'protocolName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'protocolRole': { name: 'protocolRole'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'protocolVersion': { name: 'protocolVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'proxyType': { name: 'proxyType'; type: { kind: 'ENUM'; name: 'ProxyType'; ofType: null; } }; 'standards': { name: 'standards'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContractStandard'; ofType: null; }; }; } }; 'verificationDate': { name: 'verificationDate'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'verificationMethod': { name: 'verificationMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ContractStandard': { name: 'ContractStandard'; enumValues: 'Custom' | 'Erc20' | 'Erc721' | 'Erc1155' | 'Erc4626' | 'Erc1967' | 'Erc2535' | 'Erc4337' | 'Erc6551'; };
    'ContractStatistics': { kind: 'OBJECT'; name: 'ContractStatistics'; fields: { 'averageTransactionValue': { name: 'averageTransactionValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'dailyActiveUsers': { name: 'dailyActiveUsers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'internalTransactionCount': { name: 'internalTransactionCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'monthlyActiveUsers': { name: 'monthlyActiveUsers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalFeesGenerated': { name: 'totalFeesGenerated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'totalValueReceived': { name: 'totalValueReceived'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'totalValueSent': { name: 'totalValueSent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'uniqueCallers': { name: 'uniqueCallers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'weeklyActiveUsers': { name: 'weeklyActiveUsers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'ContractTag': { name: 'ContractTag'; enumValues: 'System' | 'Multisig' | 'Proxy' | 'Factory' | 'Token' | 'Exchange' | 'Bridge' | 'Oracle' | 'Governance' | 'Treasury' | 'Registry' | 'Router' | 'Vault' | 'Staking' | 'Dao' | 'Marketplace' | 'Launchpad'; };
    'ContractVerification': { kind: 'OBJECT'; name: 'ContractVerification'; fields: { 'auditReports': { name: 'auditReports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditReport'; ofType: null; }; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'securityScore': { name: 'securityScore'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'sourcifyMatch': { name: 'sourcifyMatch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationService': { name: 'verificationService'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; }; };
    'DateTime': unknown;
    'Entity': { kind: 'UNION'; name: 'Entity'; fields: {}; possibleTypes: 'ApprovalEvent' | 'Block' | 'Contract' | 'ContractActor' | 'EoaActor' | 'Erc20Balance' | 'Erc20Token' | 'NativeBalance' | 'NativeToken' | 'Network' | 'Nft' | 'Storage' | 'SwapEvent' | 'Trace' | 'Transaction' | 'Transfer' | 'TransferEvent' | 'Validator'; };
    'EntityType': { name: 'EntityType'; enumValues: 'Actor' | 'App' | 'Balance' | 'Block' | 'Contract' | 'Event' | 'Network' | 'Nft' | 'Storage' | 'Token' | 'Trace' | 'Transaction' | 'Transfer' | 'Validator'; };
    'EoaActor': { kind: 'OBJECT'; name: 'EoaActor'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'auditReports': { name: 'auditReports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditReport'; ofType: null; }; }; } }; 'averageGasPrice': { name: 'averageGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'balance': { name: 'balance'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'ensAvatar': { name: 'ensAvatar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ensName': { name: 'ensName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ensReverse': { name: 'ensReverse'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstSeenAt': { name: 'firstSeenAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'internalTransactionCount': { name: 'internalTransactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ActorLabel'; ofType: null; }; }; } }; 'lastActiveAt': { name: 'lastActiveAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'preferredGasLimit': { name: 'preferredGasLimit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityScore': { name: 'securityScore'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ActorType'; ofType: null; }; } }; }; };
    'EoaSpecialization': { kind: 'OBJECT'; name: 'EoaSpecialization'; fields: { 'averageGasPrice': { name: 'averageGasPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ensAvatar': { name: 'ensAvatar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ensName': { name: 'ensName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ensReverse': { name: 'ensReverse'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'preferredGasLimit': { name: 'preferredGasLimit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'Erc20Balance': { kind: 'OBJECT'; name: 'Erc20Balance'; fields: { 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BalanceCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'changeAmount': { name: 'changeAmount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'changePercentage': { name: 'changePercentage'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'changePeriod': { name: 'changePeriod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'holderPercentage': { name: 'holderPercentage'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'holderRank': { name: 'holderRank'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastActivity': { name: 'lastActivity'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'liquidityAvailable': { name: 'liquidityAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityFlags': { name: 'securityFlags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BalanceType'; ofType: null; }; }; }; } }; }; };
    'Erc20Token': { kind: 'OBJECT'; name: 'Erc20Token'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'burnable': { name: 'burnable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'deflationary': { name: 'deflationary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'flashMintable': { name: 'flashMintable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'holderCount': { name: 'holderCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxSupply': { name: 'maxSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'mechanics': { name: 'mechanics'; type: { kind: 'OBJECT'; name: 'TokenMechanics'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenMetadata'; ofType: null; }; } }; 'mintable': { name: 'mintable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pausable': { name: 'pausable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'permit': { name: 'permit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'rebasable': { name: 'rebasable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taxToken': { name: 'taxToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenType'; ofType: null; }; }; }; } }; 'upgradeable': { name: 'upgradeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenVerification'; ofType: null; }; } }; }; };
    'Erc20TokenData': { kind: 'OBJECT'; name: 'Erc20TokenData'; fields: { 'burnable': { name: 'burnable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deflationary': { name: 'deflationary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'flashMintable': { name: 'flashMintable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mintable': { name: 'mintable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pausable': { name: 'pausable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'permit': { name: 'permit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'rebasable': { name: 'rebasable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taxToken': { name: 'taxToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'upgradeable': { name: 'upgradeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Event': { kind: 'INTERFACE'; name: 'Event'; fields: { 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'decodedData': { name: 'decodedData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decodedTopics': { name: 'decodedTopics'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'eventName': { name: 'eventName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'eventSignature': { name: 'eventSignature'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'logIndex': { name: 'logIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'removed': { name: 'removed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventSeverity'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'topics': { name: 'topics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; }; }; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; possibleTypes: 'ApprovalEvent' | 'SwapEvent' | 'TransferEvent'; };
    'EventCategory': { name: 'EventCategory'; enumValues: 'Transfer' | 'Approval' | 'Mint' | 'Burn' | 'Swap' | 'Liquidity' | 'Lending' | 'Staking' | 'Governance' | 'Bridge' | 'Oracle' | 'System' | 'Custom'; };
    'EventResult': { kind: 'UNION'; name: 'EventResult'; fields: {}; possibleTypes: 'ApprovalEvent' | 'SwapEvent' | 'TransferEvent'; };
    'EventSeverity': { name: 'EventSeverity'; enumValues: 'Info' | 'Warning' | 'Error' | 'Critical'; };
    'ExchangeSpecialization': { kind: 'OBJECT'; name: 'ExchangeSpecialization'; fields: { 'exchangeType': { name: 'exchangeType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FactorySpecialization': { kind: 'OBJECT'; name: 'FactorySpecialization'; fields: { 'deploySalt': { name: 'deploySalt'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'deploymentPattern': { name: 'deploymentPattern'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deploymentsCount': { name: 'deploymentsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Float': unknown;
    'GamingTokenData': { kind: 'OBJECT'; name: 'GamingTokenData'; fields: { 'earnMechanics': { name: 'earnMechanics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'gameGenre': { name: 'gameGenre'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gameTitle': { name: 'gameTitle'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'governanceRights': { name: 'governanceRights'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'stakingRewards': { name: 'stakingRewards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'utilityInGame': { name: 'utilityInGame'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'GovernanceTokenData': { kind: 'OBJECT'; name: 'GovernanceTokenData'; fields: { 'activeProposals': { name: 'activeProposals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'proposalThreshold': { name: 'proposalThreshold'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'quorumThreshold': { name: 'quorumThreshold'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'timelockDelay': { name: 'timelockDelay'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalProposals': { name: 'totalProposals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'voterParticipation': { name: 'voterParticipation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'votingPeriod': { name: 'votingPeriod'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'votingWeight': { name: 'votingWeight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; }; };
    'Hash': unknown;
    'Int': unknown;
    'LpTokenData': { kind: 'OBJECT'; name: 'LpTokenData'; fields: { 'apr': { name: 'apr'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'dexProtocol': { name: 'dexProtocol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'impermanentLossRisk': { name: 'impermanentLossRisk'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'poolAddress': { name: 'poolAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'poolFee': { name: 'poolFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BasisPoints'; ofType: null; }; } }; 'poolVolatility': { name: 'poolVolatility'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'token0': { name: 'token0'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'token1': { name: 'token1'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'totalValueLocked': { name: 'totalValueLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'volume24h': { name: 'volume24h'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; }; } }; }; };
    'MultisigSpecialization': { kind: 'OBJECT'; name: 'MultisigSpecialization'; fields: { 'multisigType': { name: 'multisigType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'signers': { name: 'signers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; }; } }; 'threshold': { name: 'threshold'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'NativeBalance': { kind: 'OBJECT'; name: 'NativeBalance'; fields: { 'availableForGas': { name: 'availableForGas'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'balanceUsd': { name: 'balanceUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BalanceCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'changeAmount': { name: 'changeAmount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'changePercentage': { name: 'changePercentage'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'changePeriod': { name: 'changePeriod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'commission': { name: 'commission'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'delegationRewards': { name: 'delegationRewards'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'governanceVotes': { name: 'governanceVotes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastActivity': { name: 'lastActivity'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'networkName': { name: 'networkName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'proposalParticipation': { name: 'proposalParticipation'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'reservedForGas': { name: 'reservedForGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityFlags': { name: 'securityFlags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'stakingRewards': { name: 'stakingRewards'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'totalStaked': { name: 'totalStaked'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'transactionCount': { name: 'transactionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BalanceType'; ofType: null; }; }; }; } }; 'validatorAddress': { name: 'validatorAddress'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; }; };
    'NativeToken': { kind: 'OBJECT'; name: 'NativeToken'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'annualInflation': { name: 'annualInflation'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'blockTime': { name: 'blockTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'consensusType': { name: 'consensusType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'gasTokenUsage': { name: 'gasTokenUsage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'holderCount': { name: 'holderCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'issuanceModel': { name: 'issuanceModel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maxSupply': { name: 'maxSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'mechanics': { name: 'mechanics'; type: { kind: 'OBJECT'; name: 'TokenMechanics'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenMetadata'; ofType: null; }; } }; 'networkName': { name: 'networkName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenType'; ofType: null; }; }; }; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenVerification'; ofType: null; }; } }; }; };
    'NativeTokenData': { kind: 'OBJECT'; name: 'NativeTokenData'; fields: { 'annualInflation': { name: 'annualInflation'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'blockTime': { name: 'blockTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'consensusType': { name: 'consensusType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gasTokenUsage': { name: 'gasTokenUsage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'issuanceModel': { name: 'issuanceModel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'networkName': { name: 'networkName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Network': { kind: 'OBJECT'; name: 'Network'; fields: { 'baseFeePerGas': { name: 'baseFeePerGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'blockGasLimit': { name: 'blockGasLimit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'blockTime': { name: 'blockTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'childChainIds': { name: 'childChainIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'confirmationsRequired': { name: 'confirmationsRequired'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'consensus': { name: 'consensus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'documentation': { name: 'documentation'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'eip1559': { name: 'eip1559'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'finalityBlocks': { name: 'finalityBlocks'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'iconBackground': { name: 'iconBackground'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'iconUrl': { name: 'iconUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'infoUrl': { name: 'infoUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isDeprecated': { name: 'isDeprecated'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isTestnet': { name: 'isTestnet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parentChainId': { name: 'parentChainId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'parentNetworkId': { name: 'parentNetworkId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'priorityFeePerGas': { name: 'priorityFeePerGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'shortName': { name: 'shortName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NetworkStatus'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NetworkType'; ofType: null; }; } }; }; };
    'NetworkStatus': { name: 'NetworkStatus'; enumValues: 'Active' | 'Deprecated' | 'Maintenance' | 'Halted' | 'Beta' | 'Alpha'; };
    'NetworkType': { name: 'NetworkType'; enumValues: 'Mainnet' | 'Testnet' | 'Devnet' | 'Layer2' | 'Sidechain' | 'PrivateNetwork' | 'Rollup' | 'Subnet'; };
    'Nft': { kind: 'OBJECT'; name: 'Nft'; fields: { 'approved': { name: 'approved'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; 'balance': { name: 'balance'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'burned': { name: 'burned'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'categories': { name: 'categories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NftCategory'; ofType: null; }; }; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'circulatingSupply': { name: 'circulatingSupply'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'flagReason': { name: 'flagReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isFlagged': { name: 'isFlagged'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastTransferAt': { name: 'lastTransferAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NftMetadata'; ofType: null; }; } }; 'mintPrice': { name: 'mintPrice'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mintTransaction': { name: 'mintTransaction'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'mintedAt': { name: 'mintedAt'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'rarity': { name: 'rarity'; type: { kind: 'ENUM'; name: 'NftRarity'; ofType: null; } }; 'rarityRank': { name: 'rarityRank'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rarityScore': { name: 'rarityScore'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NftStandard'; ofType: null; }; } }; 'tokenId': { name: 'tokenId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tokenUri': { name: 'tokenUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalHolders': { name: 'totalHolders'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationSource': { name: 'verificationSource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'NftAttribute': { kind: 'OBJECT'; name: 'NftAttribute'; fields: { 'displayType': { name: 'displayType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'maxValue': { name: 'maxValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rarity': { name: 'rarity'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'traitType': { name: 'traitType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'NftCategory': { name: 'NftCategory'; enumValues: 'Art' | 'Collectible' | 'Gaming' | 'Utility' | 'Domain' | 'Music' | 'Video' | 'Photography' | 'Sports' | 'VirtualWorlds' | 'Membership' | 'Identity' | 'Other'; };
    'NftMetadata': { kind: 'OBJECT'; name: 'NftMetadata'; fields: { 'animationOriginal': { name: 'animationOriginal'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'animationUrl': { name: 'animationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NftAttribute'; ofType: null; }; }; } }; 'backgroundColor': { name: 'backgroundColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contractUri': { name: 'contractUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'imageOriginal': { name: 'imageOriginal'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'imagePreview': { name: 'imagePreview'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'imageThumbnail': { name: 'imageThumbnail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metadataUri': { name: 'metadataUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenUri': { name: 'tokenUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'NftRarity': { name: 'NftRarity'; enumValues: 'Common' | 'Uncommon' | 'Rare' | 'Epic' | 'Legendary' | 'Mythic' | 'Unique'; };
    'NftStandard': { name: 'NftStandard'; enumValues: 'Erc721' | 'Erc1155' | 'Erc998' | 'Erc4907' | 'Erc5192' | 'CryptoKitties' | 'CryptoPunks' | 'Ens' | 'Other'; };
    'OracleSpecialization': { kind: 'OBJECT'; name: 'OracleSpecialization'; fields: { 'aggregationMethod': { name: 'aggregationMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dataFeeds': { name: 'dataFeeds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'oracleType': { name: 'oracleType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updateFrequency': { name: 'updateFrequency'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Percentage': unknown;
    'ProxyType': { name: 'ProxyType'; enumValues: 'Eip1967' | 'Eip1822' | 'Eip897' | 'Beacon' | 'Diamond' | 'Minimal' | 'Clone'; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'actor': { name: 'actor'; type: { kind: 'UNION'; name: 'ActorResult'; ofType: null; } }; 'actorComposed': { name: 'actorComposed'; type: { kind: 'OBJECT'; name: 'ActorComposed'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'balance': { name: 'balance'; type: { kind: 'UNION'; name: 'BalanceResult'; ofType: null; } }; 'block': { name: 'block'; type: { kind: 'OBJECT'; name: 'Block'; ofType: null; } }; 'contract': { name: 'contract'; type: { kind: 'OBJECT'; name: 'Contract'; ofType: null; } }; 'entities': { name: 'entities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'Entity'; ofType: null; }; }; }; } }; 'event': { name: 'event'; type: { kind: 'UNION'; name: 'EventResult'; ofType: null; } }; 'network': { name: 'network'; type: { kind: 'OBJECT'; name: 'Network'; ofType: null; } }; 'nft': { name: 'nft'; type: { kind: 'OBJECT'; name: 'Nft'; ofType: null; } }; 'storage': { name: 'storage'; type: { kind: 'OBJECT'; name: 'Storage'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'UNION'; name: 'TokenResult'; ofType: null; } }; 'tokenComposed': { name: 'tokenComposed'; type: { kind: 'OBJECT'; name: 'TokenComposed'; ofType: null; } }; 'trace': { name: 'trace'; type: { kind: 'OBJECT'; name: 'Trace'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'Transaction'; ofType: null; } }; 'transfer': { name: 'transfer'; type: { kind: 'OBJECT'; name: 'Transfer'; ofType: null; } }; 'validator': { name: 'validator'; type: { kind: 'OBJECT'; name: 'Validator'; ofType: null; } }; }; };
    'RollupType': { name: 'RollupType'; enumValues: 'Optimistic' | 'ZKRollup' | 'Validium' | 'Plasma' | 'StateChannel'; };
    'StablecoinTokenData': { kind: 'OBJECT'; name: 'StablecoinTokenData'; fields: { 'collateralRatio': { name: 'collateralRatio'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'depegEvents': { name: 'depegEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'maxDepegPercentage': { name: 'maxDepegPercentage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'peggingMechanism': { name: 'peggingMechanism'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'stabilityFee': { name: 'stabilityFee'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'targetPeg': { name: 'targetPeg'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; }; } }; }; };
    'Storage': { kind: 'OBJECT'; name: 'Storage'; fields: { 'accessCount': { name: 'accessCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'associatedFunction': { name: 'associatedFunction'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'contractAddress': { name: 'contractAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'dataType': { name: 'dataType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'humanReadableValue': { name: 'humanReadableValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastAccessed': { name: 'lastAccessed'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'storageSlot': { name: 'storageSlot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; }; };
    'String': unknown;
    'SwapEvent': { kind: 'OBJECT'; name: 'SwapEvent'; fields: { 'amountIn': { name: 'amountIn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'amountInUsd': { name: 'amountInUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'amountOut': { name: 'amountOut'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'amountOutUsd': { name: 'amountOutUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'decodedData': { name: 'decodedData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decodedTopics': { name: 'decodedTopics'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'eventName': { name: 'eventName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'eventSignature': { name: 'eventSignature'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'executionPrice': { name: 'executionPrice'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'hasAntiMev': { name: 'hasAntiMev'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isPrivate': { name: 'isPrivate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'logIndex': { name: 'logIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'poolAddress': { name: 'poolAddress'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; 'poolFee': { name: 'poolFee'; type: { kind: 'SCALAR'; name: 'BasisPoints'; ofType: null; } }; 'priceImpact': { name: 'priceImpact'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'removed': { name: 'removed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'route': { name: 'route'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; }; } }; 'sender': { name: 'sender'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventSeverity'; ofType: null; }; } }; 'slippage': { name: 'slippage'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'spotPrice': { name: 'spotPrice'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'swapType': { name: 'swapType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'tokenIn': { name: 'tokenIn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'tokenInDecimals': { name: 'tokenInDecimals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'tokenInSymbol': { name: 'tokenInSymbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenOut': { name: 'tokenOut'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'tokenOutDecimals': { name: 'tokenOutDecimals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'tokenOutSymbol': { name: 'tokenOutSymbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'topics': { name: 'topics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; }; }; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'Token': { kind: 'INTERFACE'; name: 'Token'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'holderCount': { name: 'holderCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxSupply': { name: 'maxSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'mechanics': { name: 'mechanics'; type: { kind: 'OBJECT'; name: 'TokenMechanics'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenMetadata'; ofType: null; }; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenType'; ofType: null; }; }; }; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenVerification'; ofType: null; }; } }; }; possibleTypes: 'Erc20Token' | 'NativeToken'; };
    'TokenAmount': unknown;
    'TokenComposed': { kind: 'OBJECT'; name: 'TokenComposed'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'holderCount': { name: 'holderCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxSupply': { name: 'maxSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'mechanics': { name: 'mechanics'; type: { kind: 'OBJECT'; name: 'TokenMechanics'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenMetadata'; ofType: null; }; } }; 'specialization': { name: 'specialization'; type: { kind: 'OBJECT'; name: 'TokenSpecializationData'; ofType: null; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenStandard'; ofType: null; }; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenType'; ofType: null; }; }; }; } }; 'verification': { name: 'verification'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenVerification'; ofType: null; }; } }; }; };
    'TokenMechanics': { kind: 'OBJECT'; name: 'TokenMechanics'; fields: { 'burnRate': { name: 'burnRate'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'hasPermissions': { name: 'hasPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'inflationRate': { name: 'inflationRate'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'isBurnable': { name: 'isBurnable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isMintable': { name: 'isMintable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isPausable': { name: 'isPausable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isUpgradable': { name: 'isUpgradable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reflectionRate': { name: 'reflectionRate'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; 'transferTax': { name: 'transferTax'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; }; };
    'TokenMetadata': { kind: 'OBJECT'; name: 'TokenMetadata'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'logoUri': { name: 'logoUri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'TokenResult': { kind: 'UNION'; name: 'TokenResult'; fields: {}; possibleTypes: 'Erc20Token' | 'NativeToken'; };
    'TokenResultComposed': { kind: 'UNION'; name: 'TokenResultComposed'; fields: {}; possibleTypes: 'TokenComposed'; };
    'TokenSpecialization': { kind: 'OBJECT'; name: 'TokenSpecialization'; fields: { 'decimals': { name: 'decimals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenStandard': { name: 'tokenStandard'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TokenSpecializationData': { kind: 'OBJECT'; name: 'TokenSpecializationData'; fields: { 'erc20': { name: 'erc20'; type: { kind: 'OBJECT'; name: 'Erc20TokenData'; ofType: null; } }; 'gaming': { name: 'gaming'; type: { kind: 'OBJECT'; name: 'GamingTokenData'; ofType: null; } }; 'governance': { name: 'governance'; type: { kind: 'OBJECT'; name: 'GovernanceTokenData'; ofType: null; } }; 'lp': { name: 'lp'; type: { kind: 'OBJECT'; name: 'LpTokenData'; ofType: null; } }; 'native': { name: 'native'; type: { kind: 'OBJECT'; name: 'NativeTokenData'; ofType: null; } }; 'stablecoin': { name: 'stablecoin'; type: { kind: 'OBJECT'; name: 'StablecoinTokenData'; ofType: null; } }; 'yield': { name: 'yield'; type: { kind: 'OBJECT'; name: 'YieldTokenData'; ofType: null; } }; }; };
    'TokenStandard': { name: 'TokenStandard'; enumValues: 'Native' | 'Erc20' | 'Erc721' | 'Erc1155' | 'Erc4626'; };
    'TokenType': { name: 'TokenType'; enumValues: 'Utility' | 'Governance' | 'Stablecoin' | 'Wrapped' | 'Synthetic' | 'Rebasing' | 'Deflationary' | 'Yield' | 'Lp' | 'Receipt' | 'Collectible' | 'Art' | 'Gaming' | 'Membership' | 'Identity'; };
    'TokenVerification': { kind: 'OBJECT'; name: 'TokenVerification'; fields: { 'auditReports': { name: 'auditReports'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditReport'; ofType: null; }; }; } }; 'isVerified': { name: 'isVerified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'riskFactors': { name: 'riskFactors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'riskLevel': { name: 'riskLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'securityScore': { name: 'securityScore'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationSource': { name: 'verificationSource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Trace': { kind: 'OBJECT'; name: 'Trace'; fields: { 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'callType': { name: 'callType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'childTraces': { name: 'childTraces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'depth': { name: 'depth'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'gas': { name: 'gas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'input': { name: 'input'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isCreate': { name: 'isCreate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isDelegate': { name: 'isDelegate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isError': { name: 'isError'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isInternal': { name: 'isInternal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isStatic': { name: 'isStatic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isSuccess': { name: 'isSuccess'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'output': { name: 'output'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'parentTrace': { name: 'parentTrace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'subtraces': { name: 'subtraces'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; 'traceAddress': { name: 'traceAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; }; };
    'Transaction': { kind: 'OBJECT'; name: 'Transaction'; fields: { 'baseFeePerGas': { name: 'baseFeePerGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'categories': { name: 'categories'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionCategory'; ofType: null; }; }; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'format': { name: 'format'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionFormat'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'gasLimit': { name: 'gasLimit'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'input': { name: 'input'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isSuccess': { name: 'isSuccess'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'maxFeePerGas': { name: 'maxFeePerGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'maxPriorityFeePerGas': { name: 'maxPriorityFeePerGas'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionStatus'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; }; };
    'TransactionCategory': { name: 'TransactionCategory'; enumValues: 'Transfer' | 'TokenTransfer' | 'ContractCall' | 'ContractCreation' | 'Defi'; };
    'TransactionFormat': { name: 'TransactionFormat'; enumValues: 'Type0Legacy' | 'Type1AccessList' | 'Type2DynamicFee' | 'Type3Blob'; };
    'TransactionStatus': { name: 'TransactionStatus'; enumValues: 'Pending' | 'Included' | 'Confirmed' | 'Failed' | 'Dropped'; };
    'Transfer': { kind: 'OBJECT'; name: 'Transfer'; fields: { 'blockHash': { name: 'blockHash'; type: { kind: 'SCALAR'; name: 'Hash'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransferCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'indexInBlock': { name: 'indexInBlock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'indexInTransaction': { name: 'indexInTransaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nftData': { name: 'nftData'; type: { kind: 'OBJECT'; name: 'TransferNftData'; ofType: null; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransferStandard'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; 'tokenData': { name: 'tokenData'; type: { kind: 'OBJECT'; name: 'TransferTokenData'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; }; };
    'TransferCategory': { name: 'TransferCategory'; enumValues: 'Transfer' | 'Mint' | 'Burn'; };
    'TransferEvent': { kind: 'OBJECT'; name: 'TransferEvent'; fields: { 'amount': { name: 'amount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'amounts': { name: 'amounts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; }; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventCategory'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'decodedData': { name: 'decodedData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'decodedTopics': { name: 'decodedTopics'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'effectiveGasPrice': { name: 'effectiveGasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'eventName': { name: 'eventName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'eventSignature': { name: 'eventSignature'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'from': { name: 'from'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'isBurn': { name: 'isBurn'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isInternal': { name: 'isInternal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isMint': { name: 'isMint'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'logIndex': { name: 'logIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'netAmount': { name: 'netAmount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'pricePerToken': { name: 'pricePerToken'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'removed': { name: 'removed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventSeverity'; ofType: null; }; } }; 'taxAmount': { name: 'taxAmount'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'to': { name: 'to'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'SCALAR'; name: 'Address'; ofType: null; } }; 'tokenId': { name: 'tokenId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenIds': { name: 'tokenIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'tokenSymbol': { name: 'tokenSymbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'topics': { name: 'topics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; }; }; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'transferFee': { name: 'transferFee'; type: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; } }; 'transferType': { name: 'transferType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'valueUsd': { name: 'valueUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; }; };
    'TransferNftData': { kind: 'OBJECT'; name: 'TransferNftData'; fields: { 'collectionName': { name: 'collectionName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'collectionSymbol': { name: 'collectionSymbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'tokenId': { name: 'tokenId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransferStandard': { name: 'TransferStandard'; enumValues: 'Native' | 'Erc20' | 'Erc721' | 'Erc1155'; };
    'TransferTokenData': { kind: 'OBJECT'; name: 'TransferTokenData'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'amountFormatted': { name: 'amountFormatted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'amountUsd': { name: 'amountUsd'; type: { kind: 'SCALAR'; name: 'UsdAmount'; ofType: null; } }; 'decimals': { name: 'decimals'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'symbol': { name: 'symbol'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; }; };
    'UsdAmount': unknown;
    'Validator': { kind: 'OBJECT'; name: 'Validator'; fields: { 'activationEligibilityEpoch': { name: 'activationEligibilityEpoch'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'activationEpoch': { name: 'activationEpoch'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'balance': { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'chainId': { name: 'chainId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'effectiveBalance': { name: 'effectiveBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'exitEpoch': { name: 'exitEpoch'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'index': { name: 'index'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lastAttestationSlot': { name: 'lastAttestationSlot'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'lastProposalSlot': { name: 'lastProposalSlot'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'pubkey': { name: 'pubkey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'slashed': { name: 'slashed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'withdrawableEpoch': { name: 'withdrawableEpoch'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'withdrawalCredentials': { name: 'withdrawalCredentials'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Hash'; ofType: null; }; } }; }; };
    'YieldTokenData': { kind: 'OBJECT'; name: 'YieldTokenData'; fields: { 'compoundingFrequency': { name: 'compoundingFrequency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'currentApy': { name: 'currentApy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'managementFee': { name: 'managementFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'performanceFee': { name: 'performanceFee'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; }; } }; 'totalValueLocked': { name: 'totalValueLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TokenAmount'; ofType: null; }; } }; 'underlyingAsset': { name: 'underlyingAsset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Address'; ofType: null; }; } }; 'withdrawalFee': { name: 'withdrawalFee'; type: { kind: 'SCALAR'; name: 'Percentage'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'blockhead.vision';
  query: 'Query';
  mutation: never;
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
