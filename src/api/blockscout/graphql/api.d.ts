/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Address': { kind: 'OBJECT'; name: 'Address'; fields: { 'contractCode': { name: 'contractCode'; type: { kind: 'SCALAR'; name: 'Data'; ofType: null; } }; 'fetchedCoinBalance': { name: 'fetchedCoinBalance'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'fetchedCoinBalanceBlockNumber': { name: 'fetchedCoinBalanceBlockNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'hash': { name: 'hash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'smartContract': { name: 'smartContract'; type: { kind: 'OBJECT'; name: 'SmartContract'; ofType: null; } }; 'tokenTransfers': { name: 'tokenTransfers'; type: { kind: 'OBJECT'; name: 'TokenTransferConnection'; ofType: null; } }; 'tokenTransfersCount': { name: 'tokenTransfersCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'transactions': { name: 'transactions'; type: { kind: 'OBJECT'; name: 'TransactionConnection'; ofType: null; } }; 'transactionsCount': { name: 'transactionsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AddressHash': unknown;
    'Block': { kind: 'OBJECT'; name: 'Block'; fields: { 'baseFeePerGas': { name: 'baseFeePerGas'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'consensus': { name: 'consensus'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'difficulty': { name: 'difficulty'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'gasLimit': { name: 'gasLimit'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'hash': { name: 'hash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'isEmpty': { name: 'isEmpty'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'minerHash': { name: 'minerHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'NonceHash'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'parentHash': { name: 'parentHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'totalDifficulty': { name: 'totalDifficulty'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; }; };
    'Boolean': unknown;
    'CallType': { name: 'CallType'; enumValues: 'CALL' | 'CALLCODE' | 'DELEGATECALL' | 'STATICCALL'; };
    'CeloTransfer': { kind: 'OBJECT'; name: 'CeloTransfer'; fields: { 'blockNumber': { name: 'blockNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'comment': { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fromAccountHash': { name: 'fromAccountHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'fromAddressHash': { name: 'fromAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'input': { name: 'input'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'logIndex': { name: 'logIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'toAccountHash': { name: 'toAccountHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'toAddressHash': { name: 'toAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenAddress': { name: 'tokenAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenId': { name: 'tokenId'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'tokenType': { name: 'tokenType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; }; };
    'CeloTransferConnection': { kind: 'OBJECT'; name: 'CeloTransferConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CeloTransferEdge'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CeloTransferEdge': { kind: 'OBJECT'; name: 'CeloTransferEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CeloTransfer'; ofType: null; } }; }; };
    'Data': unknown;
    'DateTime': unknown;
    'Decimal': unknown;
    'FullHash': unknown;
    'ID': unknown;
    'Int': unknown;
    'InternalTransaction': { kind: 'OBJECT'; name: 'InternalTransaction'; fields: { 'blockHash': { name: 'blockHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'blockIndex': { name: 'blockIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'callType': { name: 'callType'; type: { kind: 'ENUM'; name: 'CallType'; ofType: null; } }; 'createdContractAddressHash': { name: 'createdContractAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'createdContractCode': { name: 'createdContractCode'; type: { kind: 'SCALAR'; name: 'Data'; ofType: null; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fromAddressHash': { name: 'fromAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'gas': { name: 'gas'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'index': { name: 'index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'init': { name: 'init'; type: { kind: 'SCALAR'; name: 'Data'; ofType: null; } }; 'input': { name: 'input'; type: { kind: 'SCALAR'; name: 'Data'; ofType: null; } }; 'output': { name: 'output'; type: { kind: 'SCALAR'; name: 'Data'; ofType: null; } }; 'toAddressHash': { name: 'toAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'traceAddress': { name: 'traceAddress'; type: { kind: 'SCALAR'; name: 'Json'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'transactionIndex': { name: 'transactionIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'Type'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; }; };
    'InternalTransactionConnection': { kind: 'OBJECT'; name: 'InternalTransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InternalTransactionEdge'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InternalTransactionEdge': { kind: 'OBJECT'; name: 'InternalTransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'InternalTransaction'; ofType: null; } }; }; };
    'Json': unknown;
    'Language': { name: 'Language'; enumValues: 'SOLIDITY' | 'VYPER' | 'YUL'; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'CeloTransfer' | 'InternalTransaction' | 'TokenTransfer' | 'Transaction' | 'TransferTransaction'; };
    'NonceHash': unknown;
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RootQueryType': { kind: 'OBJECT'; name: 'RootQueryType'; fields: { 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'addresses': { name: 'addresses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Address'; ofType: null; }; } }; 'block': { name: 'block'; type: { kind: 'OBJECT'; name: 'Block'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Node'; ofType: null; } }; 'tokenTransferTxs': { name: 'tokenTransferTxs'; type: { kind: 'OBJECT'; name: 'TransferTransactionConnection'; ofType: null; } }; 'tokenTransfers': { name: 'tokenTransfers'; type: { kind: 'OBJECT'; name: 'TokenTransferConnection'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'Transaction'; ofType: null; } }; }; };
    'RootSubscriptionType': { kind: 'OBJECT'; name: 'RootSubscriptionType'; fields: { 'tokenTransfers': { name: 'tokenTransfers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenTransfer'; ofType: null; }; } }; }; };
    'SmartContract': { kind: 'OBJECT'; name: 'SmartContract'; fields: { 'abi': { name: 'abi'; type: { kind: 'SCALAR'; name: 'Json'; ofType: null; } }; 'addressHash': { name: 'addressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'compilerSettings': { name: 'compilerSettings'; type: { kind: 'SCALAR'; name: 'Json'; ofType: null; } }; 'compilerVersion': { name: 'compilerVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'constructorArguments': { name: 'constructorArguments'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contractSourceCode': { name: 'contractSourceCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'evmVersion': { name: 'evmVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalLibraries': { name: 'externalLibraries'; type: { kind: 'SCALAR'; name: 'Json'; ofType: null; } }; 'filePath': { name: 'filePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isChangedBytecode': { name: 'isChangedBytecode'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'language': { name: 'language'; type: { kind: 'ENUM'; name: 'Language'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'optimization': { name: 'optimization'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'optimizationRuns': { name: 'optimizationRuns'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'partiallyVerified': { name: 'partiallyVerified'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'verifiedViaEthBytecodeDb': { name: 'verifiedViaEthBytecodeDb'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'verifiedViaSourcify': { name: 'verifiedViaSourcify'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'SortOrder': { name: 'SortOrder'; enumValues: 'ASC' | 'DESC'; };
    'Status': { name: 'Status'; enumValues: 'ERROR' | 'OK'; };
    'String': unknown;
    'Token': { kind: 'OBJECT'; name: 'Token'; fields: { 'circulatingMarketCap': { name: 'circulatingMarketCap'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'contractAddressHash': { name: 'contractAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'decimals': { name: 'decimals'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'holderCount': { name: 'holderCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'iconUrl': { name: 'iconUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'symbol': { name: 'symbol'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalSupply': { name: 'totalSupply'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'volume24h': { name: 'volume24h'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; }; };
    'TokenTransfer': { kind: 'OBJECT'; name: 'TokenTransfer'; fields: { 'amount': { name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'amounts': { name: 'amounts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'fromAddressHash': { name: 'fromAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'logIndex': { name: 'logIndex'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'toAddressHash': { name: 'toAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'OBJECT'; name: 'Token'; ofType: null; } }; 'tokenContractAddressHash': { name: 'tokenContractAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'tokenIds': { name: 'tokenIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'Transaction'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; }; };
    'TokenTransferConnection': { kind: 'OBJECT'; name: 'TokenTransferConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TokenTransferEdge'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TokenTransferEdge': { kind: 'OBJECT'; name: 'TokenTransferEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TokenTransfer'; ofType: null; } }; }; };
    'Transaction': { kind: 'OBJECT'; name: 'Transaction'; fields: { 'block': { name: 'block'; type: { kind: 'OBJECT'; name: 'Block'; ofType: null; } }; 'blockHash': { name: 'blockHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'createdContractAddressHash': { name: 'createdContractAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'cumulativeGasUsed': { name: 'cumulativeGasUsed'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'earliestProcessingStart': { name: 'earliestProcessingStart'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fromAddressHash': { name: 'fromAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'gas': { name: 'gas'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'hasErrorInInternalTransactions': { name: 'hasErrorInInternalTransactions'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hash': { name: 'hash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'index': { name: 'index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'input': { name: 'input'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'internalTransactions': { name: 'internalTransactions'; type: { kind: 'OBJECT'; name: 'InternalTransactionConnection'; ofType: null; } }; 'maxFeePerGas': { name: 'maxFeePerGas'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'maxPriorityFeePerGas': { name: 'maxPriorityFeePerGas'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'nonce': { name: 'nonce'; type: { kind: 'SCALAR'; name: 'NonceHash'; ofType: null; } }; 'r': { name: 'r'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'revertReason': { name: 'revertReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 's': { name: 's'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'Status'; ofType: null; } }; 'toAddressHash': { name: 'toAddressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'v': { name: 'v'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; }; };
    'TransactionConnection': { kind: 'OBJECT'; name: 'TransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionEdge'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TransactionEdge': { kind: 'OBJECT'; name: 'TransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Transaction'; ofType: null; } }; }; };
    'TransferTransaction': { kind: 'OBJECT'; name: 'TransferTransaction'; fields: { 'addressHash': { name: 'addressHash'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'blockNumber': { name: 'blockNumber'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'feeCurrency': { name: 'feeCurrency'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'feeToken': { name: 'feeToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gasPrice': { name: 'gasPrice'; type: { kind: 'SCALAR'; name: 'Wei'; ofType: null; } }; 'gasUsed': { name: 'gasUsed'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; } }; 'gatewayFee': { name: 'gatewayFee'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'gatewayFeeRecipient': { name: 'gatewayFeeRecipient'; type: { kind: 'SCALAR'; name: 'AddressHash'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'input': { name: 'input'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'tokenTransfer': { name: 'tokenTransfer'; type: { kind: 'OBJECT'; name: 'CeloTransferConnection'; ofType: null; } }; 'transactionHash': { name: 'transactionHash'; type: { kind: 'SCALAR'; name: 'FullHash'; ofType: null; } }; }; };
    'TransferTransactionConnection': { kind: 'OBJECT'; name: 'TransferTransactionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TransferTransactionEdge'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TransferTransactionEdge': { kind: 'OBJECT'; name: 'TransferTransactionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TransferTransaction'; ofType: null; } }; }; };
    'Type': { name: 'Type'; enumValues: 'CALL' | 'CREATE' | 'REWARD' | 'SELFDESTRUCT'; };
    'Wei': unknown;
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'blockscout';
  query: 'RootQueryType';
  mutation: never;
  subscription: 'RootSubscriptionType';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
