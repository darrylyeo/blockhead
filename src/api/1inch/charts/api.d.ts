/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1.0/chart/line/{token0}/{token1}/{period}/{chainId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Allows to get historical line chart data for specific token pair and period */
        get: operations["ApiController_getLineChart"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.0/chart/aggregated/candle/{token0}/{token1}/{seconds}/{chainId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Allows to get historical candle chart data for specific token pair and period */
        get: operations["ApiController_getCandleChart"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Line: {
            /**
             * @description Time in seconds
             * @example 1697385600
             */
            time: number;
            /**
             * @description Price
             * @example 1556.156815313485
             */
            value: number;
        };
        LinesResponse: {
            /** @description Candles array */
            data: components["schemas"]["Line"][];
        };
        Candle: {
            /**
             * @description Time in seconds
             * @example 1697385600
             */
            time: number;
            /**
             * @description Candle open price
             * @example 1556.156815313485
             */
            open: number;
            /**
             * @description Candle high price
             * @example 1589.1439810493962
             */
            high: number;
            /**
             * @description Candle low price
             * @example 1539.1121304866367
             */
            low: number;
            /**
             * @description Candle close price
             * @example 1558.2917685385037
             */
            close: number;
        };
        CandlesResponse: {
            /** @description Candles array */
            data: components["schemas"]["Candle"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    ApiController_getLineChart: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Base token address
                 * @example 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                 */
                token0: string;
                /**
                 * @description Quote token address
                 * @example 0xdac17f958d2ee523a2206206994597c13d831ec7
                 */
                token1: string;
                /**
                 * @description Period. Supported periods: 24H ,1W ,1M ,1Y ,AllTime
                 * @example 24H
                 */
                period: "24H" | "1W" | "1M" | "1Y" | "AllTime";
                /**
                 * @description Supported chain: 1/56/137/42161/43114/100/10/8453/324/59144
                 * @example 1
                 */
                chainId: 1 | 56 | 137 | 42161 | 43114 | 100 | 10 | 8453 | 324 | 59144;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LinesResponse"];
                };
            };
        };
    };
    ApiController_getCandleChart: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description Base token address
                 * @example 0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
                 */
                token0: string;
                /**
                 * @description Quote token address
                 * @example 0xdac17f958d2ee523a2206206994597c13d831ec7
                 */
                token1: string;
                /**
                 * @description Period in seconds. Supported seconds: 300 ,900 ,3600 ,14400 ,86400 ,604800
                 * @example 86400
                 */
                seconds: 300 | 900 | 3600 | 14400 | 86400 | 604800;
                /**
                 * @description Supported chain: 1/56/137/42161/43114/100/10/8453/324/59144
                 * @example 1
                 */
                chainId: 1 | 56 | 137 | 42161 | 43114 | 100 | 10 | 8453 | 324 | 59144;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CandlesResponse"];
                };
            };
        };
    };
}
