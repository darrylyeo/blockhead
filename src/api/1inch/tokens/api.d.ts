/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1.3/multi-chain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted multi-chain tokens
         * @description Get 1inch whitelisted multi-chain tokens info
         */
        get: operations["TokenListMultiChainController-tokens-478f07f2-a0ce-4e6f-b1b2-75d1e1f15b56"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/multi-chain/token-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted multi-chain tokens in list format
         * @description Get 1inch whitelisted multi-chain tokens in list
         */
        get: operations["TokenListMultiChainController-tokensList-9fdb9ed4-4262-4aa3-9a33-900245599024"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/multi-chain/supported-chains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all supported chain ids
         * @description Get all supported chain ids
         */
        get: operations["TokenListMultiChainController-getSupportedChains-6f3d6c68-9b54-4eac-9e20-e263c1ca1519"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search multi-chain tokens by name or symbol
         * @description Search multi-chain tokens by name or symbol
         */
        get: operations["SearchCrossChainController-searchAllChains-ddcdfb6f-1d29-4e89-a1a5-aee9168874de"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/{chainId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted tokens
         * @description Get 1inch whitelisted tokens info
         */
        get: operations["TokenListController-tokens-642d1f2c-0728-4f2e-924c-369f54749395"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/{chainId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted tokens
         * @description Get 1inch whitelisted tokens info
         */
        get: operations["TokenListController-tokens-f2695a9d-0fa5-4fad-b9ab-9cbc54ec4a4b"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.4/{chainId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted tokens
         * @description Get 1inch whitelisted tokens info
         */
        get: operations["TokenListController-tokens-028cddec-271a-4c8d-81f7-a5106927b3ea"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/{chainId}/token-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted tokens in list format
         * @description Get 1inch whitelisted tokens in list
         */
        get: operations["TokenListController-tokensList-f7c59d63-b86a-4741-a3bb-58a77ebb797a"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/{chainId}/token-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted tokens in list format
         * @description Get 1inch whitelisted tokens in list
         */
        get: operations["TokenListController-tokensList-607cc659-b7ad-4322-99fd-3fad10800f30"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.4/{chainId}/token-list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 1inch whitelisted tokens in list format
         * @description Get 1inch whitelisted tokens in list
         */
        get: operations["TokenListController-tokensList-b80f43b9-1daf-420e-8a00-8a8fc63ff767"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/{chainId}/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search tokens by name or symbol
         * @description Search tokens by name or symbol
         */
        get: operations["SearchController-searchSingleChain-7add9293-9345-4e00-b014-66c716dc501b"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/{chainId}/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search tokens by name or symbol
         * @description Search tokens by name or symbol
         */
        get: operations["SearchController-searchSingleChain-bef31654-b01e-449e-97bb-52c6afd2f771"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.4/{chainId}/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search tokens by name or symbol
         * @description Search tokens by name or symbol
         */
        get: operations["SearchController-searchSingleChain-e9aaf5a3-6c77-4ee4-9eec-67baf5aa16f3"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/{chainId}/custom": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get many tokens
         * @description Get tokens info
         */
        get: operations["CustomTokensController-getTokensInfo-6ba4259d-1cc7-47a1-af6f-11c9338e70b7"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/{chainId}/custom": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get many tokens
         * @description Get tokens info
         */
        get: operations["CustomTokensController-getTokensInfo-5f2f7893-c49c-4709-86c1-aa90d64af176"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.4/{chainId}/custom": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get many tokens
         * @description Get tokens info
         */
        get: operations["CustomTokensController-getTokensInfo-d2c06f92-70ef-4a95-85ba-744a93bd5e28"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/{chainId}/custom/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single token
         * @description Get token info
         */
        get: operations["CustomTokensController-getTokenInfo-589767af-308e-47fa-b354-fce1154a8a6c"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.3/{chainId}/custom/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single token
         * @description Get token info
         */
        get: operations["CustomTokensController-getTokenInfo-3e233998-da66-490c-b4bd-fde26d7b9a66"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.4/{chainId}/custom/{address}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get single token
         * @description Get token info
         */
        get: operations["CustomTokensController-getTokenInfo-51a8761b-430b-4ec6-8f5b-bfe1a1d83115"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ProviderTokenDto: {
            chainId: number;
            symbol: string;
            name: string;
            address: string;
            decimals: number;
            logoURI?: string;
            providers: string[];
            eip2612?: boolean;
            isFoT?: boolean;
            displayedSymbol?: string;
            tags: string[];
        };
        Object: Record<string, never>;
        TagDto: {
            provider: string;
            value: string;
        };
        TokenInfoDto: {
            address: string;
            chainId: number;
            decimals: number;
            extensions?: Record<string, never>;
            logoURI: string;
            name: string;
            symbol: string;
            tags: string[];
        };
        VersionDto: {
            major: number;
            minor: number;
            patch: number;
        };
        TokenListResponseDto: {
            keywords: string[];
            logoURI: string;
            name: string;
            tags: {
                [key: string]: components["schemas"]["TagDto"];
            };
            tags_order: string[];
            timestamp: string;
            tokens: components["schemas"]["TokenInfoDto"][];
            version: components["schemas"]["VersionDto"];
        };
        TokenDto: {
            chainId: number;
            symbol: string;
            name: string;
            address: string;
            decimals: number;
            logoURI?: string;
            rating: number;
            eip2612?: boolean;
            isFoT?: boolean;
            tags: components["schemas"]["TagDto"][];
            providers: string[];
        };
        BadRequestErrorDto: {
            /** @example 400 */
            statusCode: number;
            message: string;
            error: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "TokenListMultiChainController-tokens-478f07f2-a0ce-4e6f-b1b2-75d1e1f15b56": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is 1inch */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "TokenListMultiChainController-tokensList-9fdb9ed4-4262-4aa3-9a33-900245599024": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is "1inch" */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token list */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenListResponseDto"];
                };
            };
        };
    };
    "TokenListMultiChainController-getSupportedChains-6f3d6c68-9b54-4eac-9e20-e263c1ca1519": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "SearchCrossChainController-searchAllChains-ddcdfb6f-1d29-4e89-a1a5-aee9168874de": {
        parameters: {
            query: {
                /** @description Text to search for in token address, token symbol, or description */
                query?: string;
                /** @description Whether to ignore listed tokens */
                ignore_listed?: boolean;
                only_positive_rating: boolean;
                /** @description Maximum number of tokens to return */
                limit?: number;
                country: components["schemas"]["Object"];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Search results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"][];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "TokenListController-tokens-642d1f2c-0728-4f2e-924c-369f54749395": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is 1inch */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        "0x111111111117dc0aa78b770fa6a738034120c302"?: components["schemas"]["ProviderTokenDto"];
                    };
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "TokenListController-tokens-f2695a9d-0fa5-4fad-b9ab-9cbc54ec4a4b": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is 1inch */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        "0x111111111117dc0aa78b770fa6a738034120c302"?: components["schemas"]["ProviderTokenDto"];
                    };
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "TokenListController-tokens-028cddec-271a-4c8d-81f7-a5106927b3ea": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is 1inch */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        "0x111111111117dc0aa78b770fa6a738034120c302"?: components["schemas"]["ProviderTokenDto"];
                    };
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "TokenListController-tokensList-f7c59d63-b86a-4741-a3bb-58a77ebb797a": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is "1inch" */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token list */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenListResponseDto"];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "TokenListController-tokensList-607cc659-b7ad-4322-99fd-3fad10800f30": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is "1inch" */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token list */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenListResponseDto"];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "TokenListController-tokensList-b80f43b9-1daf-420e-8a00-8a8fc63ff767": {
        parameters: {
            query?: {
                /** @description Provider code. Default value is "1inch" */
                provider?: string;
                /** @description Country code */
                country?: string;
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token list */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenListResponseDto"];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "SearchController-searchSingleChain-7add9293-9345-4e00-b014-66c716dc501b": {
        parameters: {
            query: {
                /** @description Text to search for in token address, token symbol, or description */
                query?: string;
                /** @description Whether to ignore listed tokens */
                ignore_listed?: boolean;
                only_positive_rating: boolean;
                /** @description Maximum number of tokens to return */
                limit?: number;
                country: components["schemas"]["Object"];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Search results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"][];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "SearchController-searchSingleChain-bef31654-b01e-449e-97bb-52c6afd2f771": {
        parameters: {
            query: {
                /** @description Text to search for in token address, token symbol, or description */
                query?: string;
                /** @description Whether to ignore listed tokens */
                ignore_listed?: boolean;
                only_positive_rating: boolean;
                /** @description Maximum number of tokens to return */
                limit?: number;
                country: components["schemas"]["Object"];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Search results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"][];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "SearchController-searchSingleChain-e9aaf5a3-6c77-4ee4-9eec-67baf5aa16f3": {
        parameters: {
            query: {
                /** @description Text to search for in token address, token symbol, or description */
                query?: string;
                /** @description Whether to ignore listed tokens */
                ignore_listed?: boolean;
                only_positive_rating: boolean;
                /** @description Maximum number of tokens to return */
                limit?: number;
                country: components["schemas"]["Object"];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Search results */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"][];
                };
            };
            /** @description Invalid chain ID */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "CustomTokensController-getTokensInfo-6ba4259d-1cc7-47a1-af6f-11c9338e70b7": {
        parameters: {
            query: {
                addresses: string[];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Tokens info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        "0x111111111117dc0aa78b770fa6a738034120c302"?: components["schemas"]["TokenInfoDto"];
                    };
                };
            };
            /** @description Invalid chain ID or address */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "CustomTokensController-getTokensInfo-5f2f7893-c49c-4709-86c1-aa90d64af176": {
        parameters: {
            query: {
                addresses: string[];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Tokens info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        "0x111111111117dc0aa78b770fa6a738034120c302"?: components["schemas"]["TokenInfoDto"];
                    };
                };
            };
            /** @description Invalid chain ID or address */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "CustomTokensController-getTokensInfo-d2c06f92-70ef-4a95-85ba-744a93bd5e28": {
        parameters: {
            query: {
                addresses: string[];
            };
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Tokens info map */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        "0x111111111117dc0aa78b770fa6a738034120c302"?: components["schemas"]["TokenInfoDto"];
                    };
                };
            };
            /** @description Invalid chain ID or address */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "CustomTokensController-getTokenInfo-589767af-308e-47fa-b354-fce1154a8a6c": {
        parameters: {
            query?: never;
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"];
                };
            };
            /** @description Invalid chain ID or address */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "CustomTokensController-getTokenInfo-3e233998-da66-490c-b4bd-fde26d7b9a66": {
        parameters: {
            query?: never;
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"];
                };
            };
            /** @description Invalid chain ID or address */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
    "CustomTokensController-getTokenInfo-51a8761b-430b-4ec6-8f5b-bfe1a1d83115": {
        parameters: {
            query?: never;
            header: {
                "cf-ipcountry": components["schemas"]["Object"];
            };
            path: {
                chainId: number;
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Token info */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenDto"];
                };
            };
            /** @description Invalid chain ID or address */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestErrorDto"];
                };
            };
        };
    };
}
