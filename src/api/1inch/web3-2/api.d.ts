/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/{chainId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Perform RPC calls against full nodes
         * @description Performs JSON-RPC calls on the blockchain identified by the given chainId. The default nodeType will be used.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description The unique identifier for the blockchain. */
                    chainId: string;
                };
                cookie?: never;
            };
            /** @description JSON-RPC request payload */
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description JSON-RPC version, typically "2.0"
                         * @example 2.0
                         */
                        jsonrpc: string;
                        /**
                         * @description The name of the RPC method to be invoked
                         * @example eth_blockNumber
                         */
                        method: string;
                        /**
                         * @description Parameters for the RPC method
                         * @example []
                         */
                        params?: string[];
                        /**
                         * @description An identifier established by the client
                         * @example 1
                         */
                        id?: string;
                    };
                };
            };
            responses: {
                /** @description JSON-RPC response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description JSON-RPC version, typically "2.0"
                             * @example 2.0
                             */
                            jsonrpc: string;
                            /**
                             * @description The result of the RPC method call
                             * @example 0x10
                             */
                            result?: string;
                            /**
                             * @description An identifier established by the client
                             * @example 1
                             */
                            id: string;
                        };
                    };
                };
                /** @description Invalid request format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description ChainId not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/{chainId}/{nodeType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Perform RPC calls
         * @description Performs JSON-RPC calls on the blockchain identified by the given chainId. If nodeType is not provided, a default nodeType will be used.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description The unique identifier for the blockchain. */
                    chainId: string;
                    /** @description The node type you require for your call. If not provided, 'full' will be used as the default value. */
                    nodeType: "full" | "archive";
                };
                cookie?: never;
            };
            /** @description JSON-RPC request payload */
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description JSON-RPC version, typically "2.0"
                         * @example 2.0
                         */
                        jsonrpc?: string;
                        /**
                         * @description The name of the RPC method to be invoked
                         * @example eth_blockNumber
                         */
                        method?: string;
                        /**
                         * @description Parameters for the RPC method
                         * @example []
                         */
                        params?: string[];
                        /**
                         * @description An identifier established by the client
                         * @example 1
                         */
                        id?: number;
                    };
                };
            };
            responses: {
                /** @description JSON-RPC response */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description JSON-RPC version, typically "2.0"
                             * @example 2.0
                             */
                            jsonrpc?: string;
                            /**
                             * @description The result of the RPC method call
                             * @example 0x10
                             */
                            result?: string;
                            /**
                             * @description An identifier mirroring the one from the request
                             * @example 1
                             */
                            id?: number;
                        };
                    };
                };
                /** @description Invalid request format */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description ChainId not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
