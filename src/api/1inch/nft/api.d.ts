/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v2/supportedchains": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description return you supported chains which our API supported */
        get: operations["NftDevV2Controller_supportedChain_v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/byaddress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get list of nfts */
        get: operations["NftDevV2Controller_getNfts_v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2/contract": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description get single nft with detail data collection & metadata */
        get: operations["NftDevV2Controller_getNftById_v2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AssetContract: {
            address: string;
            schema_name: string;
        };
        NftV2Model: {
            /** @description constraint id chain:contract(owner):tokenId */
            id: string;
            token_id: string;
            /** @enum {string} */
            provider: "OPENSEA" | "RARIBLE" | "POAP";
            name: string;
            chainId: number;
            priority: number;
            asset_contract: components["schemas"]["AssetContract"];
            image_url: string;
        };
        AssetsResponse: {
            assets: components["schemas"]["NftV2Model"][];
            /** @description next token for get next elements from opensea provider */
            openseaNextToken: string;
        };
        Collection: {
            image_url: string;
            name: string;
            description: string;
        };
        User: {
            username: string;
        };
        Creator: {
            profile_img_url: string;
            address: string;
            user: components["schemas"]["User"];
        };
        Traits: {
            value: string;
        };
        SingleNft: {
            id: string;
            token_id: string;
            name: string;
            image_url: Record<string, never>;
            chainId: number;
            provider: string;
            description: string;
            permalink: string;
            collection: components["schemas"]["Collection"];
            creator: components["schemas"]["Creator"];
            traits: components["schemas"]["Traits"][];
            asset_contract: components["schemas"]["AssetContract"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    NftDevV2Controller_supportedChain_v2: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description
             *             ETHEREUM = 1,
             *             POLYGON = 137,
             *             ARBITRUM = 42161,
             *             AVALANCHE = 43114,
             *             GNOSIS = 100,
             *             OPTIMISM = 10,
             *             KLAYTN = 8217,
             *             BASE = 8453 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example [
                     *       1,
                     *       100,
                     *       137
                     *     ] */
                    "application/json": number;
                };
            };
        };
    };
    NftDevV2Controller_getNfts_v2: {
        parameters: {
            query: {
                /** @description list of supported chains        `ETHEREUM = 1,        POLYGON = 137,        ARBITRUM = 42161,        AVALANCHE = 43114,        GNOSIS = 100,        KLAYTN = 8217,        OPTIMISM = 10,        BASE = 8453` */
                chainIds: (1 | 137 | 8453 | 42161 | 8217 | 43114 | 10)[];
                /** @description web3 address of owner NFTS */
                address: string;
                /** @description The maximum number of assets to return */
                limit?: number;
                /** @description The offset number of assets to return */
                offset?: number;
                /** @description The cursor for the next page of results. This is returned from a previous request. */
                openseaNextToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AssetsResponse"][];
                };
            };
            /** @description Bad Request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NftDevV2Controller_getNftById_v2: {
        parameters: {
            query: {
                /** @description network chain */
                chainId: 1 | 137 | 8453 | 42161 | 8217 | 43114 | 10;
                /** @description owner of NFT */
                contract: string;
                /** @description NFT ID */
                id: string;
                /** @description provider of NFT (opensea,rarible,poap) */
                provider: "OPENSEA" | "RARIBLE" | "POAP";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SingleNft"];
                };
            };
            /** @description Bad Request. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
