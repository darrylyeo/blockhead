/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1.2/137/aggregatedBalancesAndAllowances/{spender}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get balances and allowances by spender for list of wallets addresses */
        get: operations["ChainV1_2Controller_getAggregatedBalancesAndAllowancesV1_2_v1.2"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/137/balances/{walletAddress}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get balances of tokens for walletAddress */
        get: operations["ChainV1_2Controller_getBalances_v1.2"];
        put?: never;
        /**
         * Get balances of custom tokens for walletAddress
         * @description Takes wallet address and provided tokens and provides balance of each token
         */
        post: operations["ChainV1_2Controller_getCustomBalances_v1.2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/137/balances/multiple/walletsAndTokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get balances of custom tokens for list of wallets addresses */
        post: operations["ChainV1_2Controller_getBalancesByMultipleWallets_v1.2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/137/allowancesAndBalances/{spender}/{walletAddress}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get balances and allowances of tokens by spender for walletAddress */
        get: operations["ChainV1_2Controller_getAllowancesAndBalances_v1.2"];
        put?: never;
        /** Get balances and allowances of custom tokens by spender for walletAddress */
        post: operations["ChainV1_2Controller_getCustomAllowancesAndBalances_v1.2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/137/allowances/{spender}/{walletAddress}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get allowances of tokens by spender for walletAddress */
        get: operations["ChainV1_2Controller_getAllowances_v1.2"];
        put?: never;
        /** Get allowances of custom tokens by spender for walletAddress */
        post: operations["ChainV1_2Controller_getCustomAllowances_v1.2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AggregatedBalancesAndAllowancesResponse: {
            decimals: number;
            symbol: string;
            tags: string[];
            address: string;
            name: string;
            logoURI: string;
            isCustom: boolean;
            wallets: Record<string, never>;
            type: string;
            tracked?: boolean;
        };
        CustomTokensRequest: {
            /**
             * @description List of custom tokens
             * @example [
             *       "0xdac17f958d2ee523a2206206994597c13d831ec7"
             *     ]
             */
            tokens: string[];
        };
        CustomTokensAndWalletsRequest: {
            /**
             * @description List of custom tokens
             * @example [
             *       "0xdac17f958d2ee523a2206206994597c13d831ec7"
             *     ]
             */
            tokens: string[];
            /**
             * @description List of wallets
             * @example [
             *       "0x7A1284A7fc85635B79BCd1C45089A0ddde05C7C0"
             *     ]
             */
            wallets: string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "ChainV1_2Controller_getAggregatedBalancesAndAllowancesV1_2_v1.2": {
        parameters: {
            query: {
                /** @description List of wallet addresses */
                wallets: string[];
                /** @description Filter out empty balances and allowances */
                filterEmpty?: boolean;
            };
            header?: never;
            path: {
                spender: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Aggregated balances and allowances by tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregatedBalancesAndAllowancesResponse"][];
                };
            };
        };
    };
    "ChainV1_2Controller_getBalances_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get address balances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "ChainV1_2Controller_getCustomBalances_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensRequest"];
            };
        };
        responses: {
            /** @description Get address balances by provided tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "ChainV1_2Controller_getBalancesByMultipleWallets_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensAndWalletsRequest"];
            };
        };
        responses: {
            /** @description Get address balances by provided tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            [key: string]: string;
                        };
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "ChainV1_2Controller_getAllowancesAndBalances_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                spender: string;
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get address balances and allowances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            balance?: string;
                            allowance?: string;
                        };
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "ChainV1_2Controller_getCustomAllowancesAndBalances_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Spender address */
                spender: string;
                /** @description Wallet address */
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensRequest"];
            };
        };
        responses: {
            /** @description Get address balances and allowances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            balance?: string;
                            allowance?: string;
                        };
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "ChainV1_2Controller_getAllowances_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Spender address */
                spender: string;
                /** @description Wallet address */
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get address balances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    "ChainV1_2Controller_getCustomAllowances_v1.2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Spender address */
                spender: string;
                /** @description Wallet address */
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensRequest"];
            };
        };
        responses: {
            /** @description Get address balances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
}
