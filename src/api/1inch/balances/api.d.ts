/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1.2/1/aggregatedBalancesAndAllowances/{spender}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get balances and allowances by spender for list of wallets addresses */
        get: operations["getAggregatedBalancesAndAllowances"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/1/balances/{walletAddress}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get balances of tokens for walletAddress */
        get: operations["ChainV1_2Controller_getBalances"];
        put?: never;
        /**
         * Get balances of custom tokens for walletAddress
         * @description Takes wallet address and provided tokens and provides balance of each token
         */
        post: operations["ChainV1_2Controller_getCustomBalances"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/1/balances/multiple/walletsAndTokens": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get balances of custom tokens for list of wallets addresses */
        post: operations["ChainV1_2Controller_getBalancesByMultipleWallets"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/1/allowancesAndBalances/{spender}/{walletAddress}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get balances and allowances of tokens by spender for walletAddress */
        get: operations["ChainV1_2Controller_getAllowancesAndBalances"];
        put?: never;
        /** Get balances and allowances of custom tokens by spender for walletAddress */
        post: operations["ChainV1_2Controller_getCustomAllowancesAndBalances"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1.2/1/allowances/{spender}/{walletAddress}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get allowances of tokens by spender for walletAddress */
        get: operations["ChainV1_2Controller_getAllowances"];
        put?: never;
        /** Get allowances of custom tokens by spender for walletAddress */
        post: operations["ChainV1_2Controller_getCustomAllowances"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AggregatedBalancesAndAllowancesResponse: {
            /** @description Number of decimal places for the token */
            decimals?: number;
            /** @description Symbol of the token */
            symbol?: string;
            /** @description Additional tags for the token */
            tags?: string[];
            /**
             * Format: address
             * @description Token contract address
             */
            address?: string;
            /** @description Name of the token */
            name?: string;
            /**
             * Format: uri
             * @description URL to the token logo image
             */
            logoURI?: string;
            /** @description Indicates if the token is custom or not */
            isCustom?: boolean;
            /** @description Token balances and allowances for specific wallets */
            wallets?: {
                [key: string]: {
                    /** @description Balance of the token for the wallet */
                    balance?: string;
                    /** @description Allowance of the token for the wallet */
                    allowance?: string;
                };
            };
            /** @description Type of token (e.g., 'ethereum', 'token') */
            type?: string;
            /** @description Indicates if the token is tracked or not */
            tracked?: boolean;
        }[];
        CustomTokensRequest: {
            /**
             * @description List of custom tokens
             * @example [
             *       "0xdac17f958d2ee523a2206206994597c13d831ec7"
             *     ]
             */
            tokens: string[];
        };
        CustomTokensAndWalletsRequest: {
            /**
             * @description List of custom tokens
             * @example [
             *       "0xdac17f958d2ee523a2206206994597c13d831ec7"
             *     ]
             */
            tokens: string[];
            /**
             * @description List of wallets
             * @example [
             *       "0x7A1284A7fc85635B79BCd1C45089A0ddde05C7C0"
             *     ]
             */
            wallets: string[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getAggregatedBalancesAndAllowances: {
        parameters: {
            query: {
                wallets: string[];
                filterEmpty: boolean;
            };
            header?: never;
            path: {
                spender: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Aggregated balances and allowances by tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AggregatedBalancesAndAllowancesResponse"][];
                };
            };
        };
    };
    ChainV1_2Controller_getBalances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get address balances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ChainV1_2Controller_getCustomBalances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensRequest"];
            };
        };
        responses: {
            /** @description Get address balances by provided tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ChainV1_2Controller_getBalancesByMultipleWallets: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensAndWalletsRequest"];
            };
        };
        responses: {
            /** @description Get address balances by provided tokens */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            [key: string]: string;
                        };
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ChainV1_2Controller_getAllowancesAndBalances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                spender: string;
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get address balances and allowances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            balance?: string;
                            allowance?: string;
                        };
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ChainV1_2Controller_getCustomAllowancesAndBalances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                spender: string;
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensRequest"];
            };
        };
        responses: {
            /** @description Get address balances and allowances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            balance?: string;
                            allowance?: string;
                        };
                    };
                };
            };
            /** @description The provided input data is invalid */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ChainV1_2Controller_getAllowances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                spender: string;
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Get address balances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
    ChainV1_2Controller_getCustomAllowances: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                spender: string;
                walletAddress: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTokensRequest"];
            };
        };
        responses: {
            /** @description Get address balances */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
        };
    };
}
